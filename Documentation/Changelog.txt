
2014-09-25: BV just fixed the line colors in the part of the setup guide that talks about connecting Thuy's cable to the input line of the 6501. I believe that the reason for the original glitch is that Thuy and I apparently use a different polarity for the 6501 input line. That means that the current documentation applies to the cables made by Thuy (which should be all of them except for my initial testing cable). 

2014-09-25: BV Note that the call to "version -java" setup guide has a whitespace (should exaggerate in doc)
should return: "Java 1.7.0_11-b21 with Oracle Corporation Java HotSpot(TM) 64-Bit Server VM mixed mode".

2014-09-25: BV The reason we are using java is because it lies underneath matlab. It forms part of matlab's infrastructure. 

2014-09-25: BV The video card referred to in the documentation is the ATI RADEON 5770. (I should make that explicit). This is probably the same as in the other desktop mac's that we have tested.  RSM also works on my laptop which has video card NVIDIA GeForce GT 750M.

2014-09-25.  EJC testing gets RSM working on a Mavericks machine, consistent with Bill’s experience that it works on laptop with Mavericks.  Video card not noted yet but it has one DVI and two thunderbolt connectors on it, works to first order at least.  Note that RSM forces 120Hz that monitor can handle, even though Displays preferences fails to do so.  This is good.  Plan is to set up a shared current version on DropBox soon for co-development with Greg.
 
2014-10-11.  BV (via EJC).  The normalization in line 19 of the gun values needs to be uncommented for the interpolated gamma tables to work properly.  It is strange that the line should have been commented out. An error of omission would be one thing, but it turns out this was commented out for a reason.   For right now: uncomment line 19 in Interpolate_Radpow_Data.m and use the interpolated table option (which is the default option). In my experience these interpolated tables have typically proven slightly better than the best-fit tables at giving good linearity at the high luminance end of the gray-scale linearity testing.


2014-10-17.  XY

•	Moving_Bar.m
o	Enable the bar to move in arbitrary direction.
•	In the original code, bars can only move in four directions if I understand it right (0 90 180 270). Users need to define start coordinates (x_start, y_start, x_end, y_end), speed in two orthogonal directions (x_delta, y_delta) and trial duration (frames).
•	After the change, Users need to define moving direction (direction), which can be arbitrary, bar width (bar_width) and speed (delta). Start coordinates will be determined by direction and bar width, trial duration will be set to the time it takes for the bar to traverse the whole display. These are implemented by line 98-154
•	A new function was added to /RSM_Utils :rotateData.m, which is called to calculate start coordinates.
o	Enable users to define interval between trials
•	Intervals are added to trial duration in line 138 and line 142

•	Moving_Grating.m
o	Add square-wave grating.
•	Users can specify ‘sine’ or ‘square’ in ‘subtype’, square-wave texture is generated in line 335-336
o	Change algorithm of the generation of grating texture 
•	Generate 1D texture instead of 2D grating: line 113-128, 334-344, 366.
•	Instead of generating a grating texture at the beginning of each loop, precompute a larger texture and display them one-by-one in the loop. Line 323-330, 353-356
•	The reason for making above two changes is to speed things up. In the original code, grating texture is downscaled by a factor of 4 (line 329), which is fine for sine wave grating but introduce blurring in square wave grating. However if the texture is not downscaled, the execution time for each loop is so long that makes the motion unsmooth.
•	Note: I didn’t change the ‘S_file constructor mode’ part because I didn’t figure out how to use this mode.
o	Enable users to define interval between trials
•	Line 386-390

•	PulseCombo.m
o	Add full field pulses stimulus (gray-white-gray-black)
•	Line 410-480, 699-766

•	Counterphase_Grating.m
o	Enable users to define interval between trials
•	Line 93-99, 407-411

•	Prerun_RNstim.m
o	Temporarily not to prerun raw movie stimulus
•	Prerun raw movie causes error. Comment line 48-71

•	Stim_Engine.m
o	Trigger
•	Temporarily move line 60-78 to the end of q_RSM.m. This is because we currently have the trigger issue that triggers from DAQ to stimulus computer are not working well. So we decided to only use the first trigger to initialize stimulus. And the subsequent triggers are actually unnecessary.
•	q_RSM.m
o	Add full field pulses
•	Line 73-75
o	Generate randomized stimulus sequence.
•	For MB, MG and CG. Save stimulus information in structure. Line 80-124
•	Add new function ‘rand_stim.m’ to /RSM_Utils
o	Calculate moving bar stimulus duration
•	Line 91-92
•	Add new function ‘calc_mb_duration.m’ to /RSM_Utils
o	Add ‘wait trigger’, ‘wait key’
•	See ‘Stim_Engine.m’ above. Line 149-160


2014-10-28: BV Modified Analyze_Monitor_Chan.m and Fit_PreProcced_RadPow_Curve.m to deal with problems raised by uncommenting the gun value normalization in Interpolate_Radpow_Data.m (see above entry for 2014-10-11). 
