% NAME: Role
%
%        $Id: NAME VER_ID DATA-TIME vinje $
%      usage: NAME(Args)
%         by: william vinje
%       date: Date
%  copyright: (c) Date William Vinje, Eduardo Jose Chichilnisky (GPL see RSM/COPYING)
%    purpose: Role
%      usage: Examples
%
%

function[gamma, thresh, final_fit_stat] = Fit_PreProcced_RadPow_Curve(gun_vals, adjusted_radpow_data, Model, N_bits)


%Model = @BrainardModel;

% Now set up for fitting
Auxillary_Info = gun_vals;



% PART 3: Fit the sucka 

%params = [gamma, offset, alpha]

%In_Params = [2.5, 30, max(Data)];
%Min_Step_Sizes = [0.01, 1, 0.1];
%Max_Step_Sizes = [0.2, 5, 1];

In_Params = [2.5, 30];
Min_Step_Sizes = [0.01, 1];
Max_Step_Sizes = [0.2, 5];

% TO set the tolerance I will find the TS score generated by the initial parameters
[model_out] = Model(In_Params, Auxillary_Info, N_bits);
Initial_TS = FitStat(model_out, adjusted_radpow_data, Auxillary_Info);

Tol = 0.001 * Initial_TS;
Mode = 'Fixed';
%Mode = 'Adapt';                 % Use adaptive change of step sizes
V = 0;                          % Verbose flag


[final_params, final_fit_stat, num] = FitUtil(In_Params, Min_Step_Sizes, Max_Step_Sizes, Tol, Mode, Auxillary_Info, adjusted_radpow_data, V, Model, N_bits);

gamma = final_params(1);
thresh = final_params(2);
%alpha = final_params(3);