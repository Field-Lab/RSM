% NAME: Role
%
%        $Id: NAME VER_ID DATA-TIME vinje $
%      usage: NAME(Args)
%         by: william vinje
%       date: Date
%  copyright: (c) Date William Vinje, Eduardo Jose Chichilnisky (GPL see RSM/COPYING)
%    purpose: Role
%      usage: Examples
%
%

function[slope, intercept, final_fit_stat] = Fit_Line_RadPow(gun_vals, adjusted_radpow_data, Model, N_bits)

% N_bits is a placeholder

% Now set up for fitting
Auxillary_Info = gun_vals;



% PART 3: Fit the sucka 
slope_guess = (adjusted_radpow_data(length(adjusted_radpow_data)) - adjusted_radpow_data(1)) / (gun_vals(length(gun_vals)) - gun_vals(1));

In_Params = [slope_guess, adjusted_radpow_data(1)];
Min_Step_Sizes = [0.01, 0.01];
Max_Step_Sizes = [0.1, 0.1];

% TO set the tolerance I will find the TS score generated by the initial parameters
[model_out] = Model(In_Params, Auxillary_Info, N_bits);
Initial_TS = FitStat(model_out, adjusted_radpow_data, Auxillary_Info);

Tol = 0.001 * Initial_TS;
%Mode = 'Fixed';
Mode = 'Adapt';                 % Use adaptive change of step sizes
V = 0;                          % Verbose flag

[final_params, final_fit_stat, num] = FitUtil(In_Params, Min_Step_Sizes, Max_Step_Sizes, Tol, Mode, Auxillary_Info, adjusted_radpow_data, V, Model, N_bits);

slope = final_params(1);
intercept = final_params(2);
%alpha = final_params(3);